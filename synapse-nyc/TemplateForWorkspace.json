{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-nyc"
		},
		"synapse-nyc-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse-nyc-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synapse-nyc.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"bing-covid-19-data_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'bing-covid-19-data'"
		},
		"synapse-nyc-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapseadlk.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/bing-covid-19-data')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('bing-covid-19-data_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-nyc-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse-nyc-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-nyc-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapse-nyc-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/12_join_data')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": " USE nyc_taxi_discovery\n\n SELECT\n    top 100 *\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_parquet/year=2020/month=01/*.parquet',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'PARQUET'\n    )  AS [result]\n---------------------------------------------------------------------------------------------------\nwith v_trip_data as (\nselect * from \n OPENROWSET(\n        BULK 'trip_data_green_parquet/year=2020/month=*/*.parquet',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'PARQUET'\n    )  AS trip_data\n\n),\nv_taxi_zone as (\nselect * from OPENROWSET(\n        BULK 'raw/taxi_zone.csv',\n        DATA_SOURCE='nyc_taxi_data',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    WITH (LocationID SMALLINT,Borough VARCHAR(255),Zone VARCHAR(255),service_zone VARCHAR(255)) as taxi_zone\n\n),\nv_payment_type as (\nselect * from\n    OPENROWSET(\n        BULK 'payment_type.json',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR ='0x0b', \n        FIELDQUOTE = '0x0b'\n    ) \n    with (jsondoc NVARCHAR(MAX)) AS [result] \n    CROSS APPLY OPENJSON(jsondoc)\n    with (payment_type TINYINT,derscription VARCHAR(25) '$.payment_type_desc') as payment_type_tab\n)\n\nselect v_taxi_zone.Borough,\n        count(1) as total_trips,\n        sum(case when v_payment_type.derscription='Cash' then 1 else 0 end) as Cash_trip,\n        sum(case when v_payment_type.derscription='Credit card' then 1 else 0 end) as Credit_trip\nfrom v_trip_data join v_taxi_zone \n    on v_trip_data.PULocationID=v_taxi_zone.LocationID\njoin v_payment_type\n   on v_payment_type.payment_type=v_trip_data.payment_type\n    where v_payment_type.payment_type in (1,2)\n    group by v_taxi_zone.Borough\n\n\n\n    ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/1_create_database')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE Master\nGO\n\nCREATE DATABASE nyc_taxi_ldw\nGO\n\nalter DATABASE nyc_taxi_ldw collate Latin1_General_100_BIN2_UTF8\nGO\n\nUSE nyc_taxi_ldw\nGO\n\nCREATE SCHEMA bronze\nGO\n\nCREATE SCHEMA silver\nGO\n\nCREATE SCHEMA gold\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/1_explore_taxi_zone')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://synapseadlk.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) AS [result]\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapseadlk.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    WITH (LocationID SMALLINT,Borough VARCHAR(255),Zone VARCHAR(255),service_zone VARCHAR(255)) \n    \n    AS [result]\n\nEXEC sp_describe_first_result_set N'\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ''abfss://nyc-taxi-data@synapseadlk.dfs.core.windows.net/raw/taxi_zone.csv'',\n        FORMAT = ''CSV'',\n        PARSER_VERSION = ''2.0'',\n        HEADER_ROW=TRUE\n    ) AS [result]\n'\n\ncreate DATABASE nyc_taxi_discovery\n\nalter DATABASE nyc_taxi_discovery COLLATE Latin1_General_100_CI_AI_SC_UTF8\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapseadlk.dfs.core.windows.net/raw/taxi_zone_without_header.csv',\n        FORMAT = 'CSV',\n        FIRSTROW=1,\n        PARSER_VERSION = '2.0',\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    WITH (LocationID SMALLINT 1,Borough VARCHAR(255) 2,Zone VARCHAR(255) 3,service_zone VARCHAR(255) 4) \n    \n    AS [result]\n\n\nCREATE EXTERNAL DATA SOURCE nyc_taxi_data\nWITH (\n    LOCATION = 'abfss://nyc-taxi-data@synapseadlk.dfs.core.windows.net'\n)\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'raw/taxi_zone.csv',\n        DATA_SOURCE='nyc_taxi_data',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    WITH (LocationID SMALLINT,Borough VARCHAR(255),Zone VARCHAR(255),service_zone VARCHAR(255)) \n    \n    AS [result]\n\nCREATE EXTERNAL DATA SOURCE nyc_taxi_data_raw\nWITH (\n    LOCATION = 'abfss://nyc-taxi-data@synapseadlk.dfs.core.windows.net/raw'\n)   \n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'taxi_zone.csv',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    WITH (LocationID SMALLINT,Borough VARCHAR(255),Zone VARCHAR(255),service_zone VARCHAR(255)) \n    \n    AS [result]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/2_create_external_data_sources')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\nCREATE EXTERNAL DATA SOURCE nyc_taxi_src\nWITH (\n    LOCATION = 'https://synapseadlk.dfs.core.windows.net/nyc-taxi-data'\n);\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/2_explore_calendar')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://synapseadlk.dfs.core.windows.net/nyc-taxi-data/raw/calendar.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) AS [result]\n\nEXEC sp_describe_first_result_set N'\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ''abfss://nyc-taxi-data@synapseadlk.dfs.core.windows.net/raw/calendar.csv'',\n        FORMAT = ''CSV'',\n        PARSER_VERSION = ''2.0'',\n        HEADER_ROW=TRUE\n    ) AS [result]\n'    \n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapseadlk.dfs.core.windows.net/raw/calendar.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    WITH (date_key INT,date DATE,year SMALLINT,month SMALLINT,day SMALLINT,\n        day_name varchar(20),day_of_year SMALLINT,week_of_month SMALLINT,\n        week_of_year SMALLINT,month_name VARCHAR(15),year_month INT,year_week INT) \n    \n    AS [result]\n\n\n\n\n\n\n\n\n \n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'calendar.csv',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    WITH (date_key INT,date DATE,year SMALLINT,month SMALLINT,day SMALLINT,\n        day_name varchar(20),day_of_year SMALLINT,week_of_month SMALLINT,\n        week_of_year SMALLINT,month_name VARCHAR(15),year_month INT,year_week INT) \n    \n    AS [result]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/3_create_file_format')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\nIF NOT EXISTS (select * from sys.external_file_formats where name ='csv_file_format')\nCREATE EXTERNAL FILE FORMAT csv_file_format\nWITH (\n        FORMAT_TYPE = DELIMITEDTEXT,\n        FORMAT_OPTIONS(\n            FIELD_TERMINATOR = ',',\n            STRING_DELIMITER = '\"',\n            FIRST_ROW=2,\n            USE_TYPE_DEFAULT=FALSE,\n            ENCODING='UTF8',\n            PARSER_VERSION='2.0'\n        )\n    );\nGO\n\nIF NOT EXISTS (select * from sys.external_file_formats where name ='csv_file_format_pv1')\nCREATE EXTERNAL FILE FORMAT csv_file_format_pv1\nWITH (\n        FORMAT_TYPE = DELIMITEDTEXT,\n        FORMAT_OPTIONS(\n            FIELD_TERMINATOR = ',',\n            STRING_DELIMITER = '\"',\n            FIRST_ROW=2,\n            USE_TYPE_DEFAULT=FALSE,\n            ENCODING='UTF8',\n            PARSER_VERSION='1.0'\n        )\n    );\nGO\n\nIF NOT EXISTS (select * from sys.external_file_formats where name ='tsv_file_format')\nCREATE EXTERNAL FILE FORMAT tsv_file_format\nWITH (\n        FORMAT_TYPE = DELIMITEDTEXT,\n        FORMAT_OPTIONS(\n            FIELD_TERMINATOR = '\\t',\n            STRING_DELIMITER = '\"',\n            FIRST_ROW=2,\n            USE_TYPE_DEFAULT=FALSE,\n            ENCODING='UTF8',\n            PARSER_VERSION='2.0'\n        )\n    );\nGO\n\nIF NOT EXISTS (select * from sys.external_file_formats where name ='parquet_file_format')\nCREATE EXTERNAL FILE FORMAT parquet_file_format\nWITH\n(  \n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n)\n \nGO\n\nIF NOT EXISTS (select * from sys.external_file_formats where name ='delta_file_format')\nCREATE EXTERNAL FILE FORMAT delta_file_format\nWITH\n(  \n    FORMAT_TYPE = delta,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n    \n)\n \nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/3_explore_trip_type')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://synapseadlk.dfs.core.windows.net/nyc-taxi-data/raw/trip_type.tsv',\n        FORMAT = 'csv',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR='\\t'\n    ) AS [result]\n\nEXEC sp_describe_first_result_set N'\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ''https://synapseadlk.dfs.core.windows.net/nyc-taxi-data/raw/trip_type.tsv'',\n        FORMAT = ''csv'',\n        PARSER_VERSION = ''2.0'',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=''\\t''\n    ) AS [result]\n'    \n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://synapseadlk.dfs.core.windows.net/nyc-taxi-data/raw/trip_type.tsv',\n        FORMAT = 'csv',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR='\\t'\n    ) \n    WITH (trip_type INT,trip_type_desc VARCHAR(15)) \n    \n    AS [result]\n\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'trip_type.tsv',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'csv',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR='\\t'\n    ) \n    WITH (trip_type INT,trip_type_desc VARCHAR(15)) \n    \n    AS [result]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/4_create_bronze_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\n-- create taxi_zone\nIF object_id('bronze.taxi_zone') is not NULL\n    drop EXTERNAL TABLE bronze.taxi_zone\n\nCREATE EXTERNAL TABLE bronze.taxi_zone\n(\n    LocationID SMALLINT,Borough VARCHAR(15),Zone VARCHAR(50),service_zone VARCHAR(15)\n)\nWITH (\n    LOCATION = 'raw/taxi_zone.csv',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = csv_file_format,\n    REJECT_VALUE=10,\n    REJECTED_ROW_LOCATION='rejection/taxi_zone'\n)\nGO\n\n-- create calendar\nIF object_id('bronze.calendar') is not NULL\n    drop EXTERNAL TABLE bronze.taxi_zone\n\nCREATE EXTERNAL TABLE bronze.calendar\n(\n    date_key INT,date DATE,year SMALLINT,month SMALLINT,day SMALLINT,\n        day_name varchar(20),day_of_year SMALLINT,week_of_month SMALLINT,\n        week_of_year SMALLINT,month_name VARCHAR(15),year_month INT,year_week INT\n)\nWITH (\n    LOCATION = 'raw/calendar.csv',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = csv_file_format\n)\nGO\n\n--create vendor\nIF object_id('bronze.vendor') is not NULL\n    drop EXTERNAL TABLE bronze.vendor\n\nCREATE EXTERNAL TABLE bronze.vendor\n(\n    vendor_id SMALLINT,vendor_name VARCHAR(50)\n)\nWITH (\n    LOCATION = 'raw/vendor.csv',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = csv_file_format_pv1\n)\nGO\n--create trip_type\nIF object_id('bronze.trip_type') is not NULL\n    drop EXTERNAL TABLE bronze.trip_type\n\nCREATE EXTERNAL TABLE bronze.trip_type\n(\n    trip_type INT,trip_type_desc VARCHAR(15)\n)\nWITH (\n    LOCATION = 'raw/trip_type.tsv',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = tsv_file_format\n)\nGO\n--create trip_data_green_csv\nIF object_id('bronze.trip_data_green_csv') is not NULL\n    drop EXTERNAL TABLE bronze.trip_data_green_csv\n\nCREATE EXTERNAL TABLE bronze.trip_data_green_csv\n(\n    VendorID INT,lpep_pickup_datetime DATETIME2(7),lpep_dropoff_datetime DATETIME2(7),\n    store_and_fwd_flag CHAR(1),RatecodeID INT,PULocationID SMALLINT,DOLocationID SMALLINT,\n    passenger_count INT,trip_distance FLOAT,fare_amount FLOAT,extra FLOAT ,mta_tax Float,\n    tip_amount Float,tolls_amount Float,ehail_fee Float,improvement_surcharge Float,total_amount Float,\n    payment_type SMALLINT,trip_type SMALLINT,congestion_surcharge Float\n)\nWITH (\n    LOCATION = 'raw/trip_data_green_csv/year=*/month=*/*.csv',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = csv_file_format\n)\nGO\n\n--create trip_data_green_parquet\nIF object_id('bronze.trip_data_green_parquet') is not NULL\n    drop EXTERNAL TABLE bronze.trip_data_green_parquet\n\nCREATE EXTERNAL TABLE bronze.trip_data_green_parquet\n(\n    VendorID INT,lpep_pickup_datetime DATETIME2(7),lpep_dropoff_datetime DATETIME2(7),\n    store_and_fwd_flag CHAR(1),RatecodeID INT,PULocationID SMALLINT,DOLocationID SMALLINT,\n    passenger_count INT,trip_distance FLOAT,fare_amount FLOAT,extra FLOAT ,mta_tax Float,\n    tip_amount Float,tolls_amount Float,ehail_fee INT,improvement_surcharge Float,total_amount Float,\n    payment_type SMALLINT,trip_type SMALLINT,congestion_surcharge Float\n)\nWITH (\n    LOCATION = 'raw/trip_data_green_parquet/year=*/month=*/*.parquet',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = parquet_file_format\n)\nGO\n\nselect top 10 * from bronze.trip_data_green_parquet\n\n--create trip_data_green_delta\nIF object_id('bronze.trip_data_green_delta') is not NULL\n    drop EXTERNAL TABLE bronze.trip_data_green_delta\n\nCREATE EXTERNAL TABLE bronze.trip_data_green_delta\n(\n    VendorID INT,lpep_pickup_datetime DATETIME2(7),lpep_dropoff_datetime DATETIME2(7),\n    store_and_fwd_flag CHAR(1),RatecodeID INT,PULocationID SMALLINT,DOLocationID SMALLINT,\n    passenger_count INT,trip_distance FLOAT,fare_amount FLOAT,extra FLOAT ,mta_tax Float,\n    tip_amount Float,tolls_amount Float,ehail_fee INT,improvement_surcharge Float,total_amount Float,\n    payment_type SMALLINT,trip_type SMALLINT,congestion_surcharge Float\n)\nWITH (\n    LOCATION = 'raw/trip_data_green_delta/',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = delta_file_format\n)\nGO\n\nselect top 10 * from bronze.trip_data_green_delta\n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/4_explore_payment_type_json_lineFormat')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "----------------------------------------------------------------------------------------\n--- Reading Data from JSON file with line formate\n\n---{\"payment_type\":1,\"payment_type_desc\":\"Credit card\"}\n---{\"payment_type\":2,\"payment_type_desc\":\"Cash\"}\n---{\"payment_type\":3,\"payment_type_desc\":\"No charge\"}\n----------------------------------------------------------------------------------------\nselect payment_type,derscription\nFROM\n    OPENROWSET(\n        BULK 'payment_type.json',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR ='0x0b', \n        FIELDQUOTE = '0x0b'\n    ) \n    with (jsondoc NVARCHAR(MAX)) AS [result] \n    CROSS APPLY OPENJSON(jsondoc)\n    with (payment_type TINYINT,derscription VARCHAR(25) '$.payment_type_desc');\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/5_create_bronze_view')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\nDROP VIEW if EXISTS bronze.vw_rate_code\nGO\n\nCREATE view bronze.vw_rate_code \nas \nselect rate_code_id,rate_code\nFROM\n    OPENROWSET(\n        BULK '/raw/rate_code.json',\n        DATA_SOURCE='nyc_taxi_src',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR ='0x0b', \n        FIELDQUOTE = '0x0b',\n        ROWTERMINATOR='0x0b'\n    ) \n    with (jsondoc NVARCHAR(MAX)) AS [result] \n    CROSS APPLY OPENJSON(jsondoc)\n    with (rate_code_id TINYINT,rate_code VARCHAR(25) )\nGo   \n\n--------------------------------------------------------------------------------------------------------------\n\nDROP VIEW if EXISTS bronze.vw_payment_type\nGO\n\nCREATE view bronze.vw_payment_type \nas \nselect payment_type,derscription\nFROM\n    OPENROWSET(\n        BULK '/raw/payment_type.json',\n        DATA_SOURCE='nyc_taxi_src',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR ='0x0b', \n        FIELDQUOTE = '0x0b'\n    ) \n    with (jsondoc NVARCHAR(MAX)) AS [result] \n    CROSS APPLY OPENJSON(jsondoc)\n    with (payment_type TINYINT,derscription VARCHAR(25) '$.payment_type_desc')\nGo  \n\n--------------------------------------------------------------------------------------------------------------\nDROP VIEW if EXISTS bronze.vw_trip_data_green_csv\nGO\n\nCREATE view bronze.vw_trip_data_green_csv \nas \nSELECT\n    result.filepath(1) as year,\n    result.filepath(2) as month, \n    result.*\nFROM\n    OPENROWSET(\n        BULK '/raw/trip_data_green_csv/year=*/month=*/*.csv' ,\n        DATA_SOURCE='nyc_taxi_src',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    with \n    (\n        VendorID INT,lpep_pickup_datetime DATETIME2(7),lpep_dropoff_datetime DATETIME2(7),\n    store_and_fwd_flag CHAR(1),RatecodeID INT,PULocationID SMALLINT,DOLocationID SMALLINT,\n    passenger_count INT,trip_distance FLOAT,fare_amount FLOAT,extra FLOAT ,mta_tax Float,\n    tip_amount Float,tolls_amount Float,ehail_fee Float,improvement_surcharge Float,total_amount Float,\n    payment_type SMALLINT,trip_type SMALLINT,congestion_surcharge Float\n    )\n    AS [result]\nGO \n\nselect count(1)  from bronze.vw_trip_data_green_csv\nwhere year='2020' and month='02'\n   \n   \n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/5_explore_payment_type_json_Array')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "----------------------------------------------------------------------------------------\n--- Reading Data from JSON file with Array Formate\n\n---{\"payment_type\":4,\"payment_type_desc\":[{\"sub_type\":1, \"value\":\"Dispute\"}]}\n---{\"payment_type\":5,\"payment_type_desc\":[{\"sub_type\":1, \"value\":\"Unknown\"}, {\"sub_type\":2, \"value\":\"Unavailable\"}]}\n---{\"payment_type\":6,\"payment_type_desc\":[{\"sub_type\":1, \"value\":\"Voided trip\"}]}\n----------------------------------------------------------------------------------------    \n--Reading Data from JSON file with Array Formate using open json\n\nselect *\nFROM\n    OPENROWSET(\n        BULK 'payment_type_array.json',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR ='0x0b', \n        FIELDQUOTE = '0x0b'\n    ) \n    with (jsondoc NVARCHAR(MAX)) AS [result] \n    CROSS APPLY OPENJSON(jsondoc)\n    with (payment_type TINYINT,payment_type_desc NVARCHAR(MAX) as JSON )\n     CROSS APPLY OPENJSON(payment_type_desc)\n     WITH (Description VARCHAR(25) '$.value');\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/6_create_silver_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\n--silver.taxi_zone\nIF object_id('silver.taxi_zone') is not NULL\n    drop EXTERNAL TABLE silver.taxi_zone\n\nCREATE EXTERNAL TABLE silver.taxi_zone\nWITH (\n    LOCATION = 'silver/taxi_zone',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = parquet_file_format\n \n)\nas \nselect * from bronze.taxi_zone\n\n--silver.calendar\nIF object_id('silver.calendar') is not NULL\n    drop EXTERNAL TABLE silver.calendar\n\nCREATE EXTERNAL TABLE silver.calendar\n\nWITH (\n    LOCATION = 'silver/calendar',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = parquet_file_format\n \n)\nas \nselect * from bronze.calendar\n\n\n--silver.vendor\nIF object_id('silver.vendor') is not NULL\n    drop EXTERNAL TABLE silver.vendor\n\nCREATE EXTERNAL TABLE silver.vendor\n\nWITH (\n    LOCATION = 'silver/vendor',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = parquet_file_format\n \n)\nas \nselect * from bronze.vendor\n\n--silver.trip_type\nIF object_id('silver.trip_type') is not NULL\n    drop EXTERNAL TABLE silver.trip_type\n\nCREATE EXTERNAL TABLE silver.trip_type\n\nWITH (\n    LOCATION = 'silver/trip_type',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = parquet_file_format\n \n)\nas \nselect * from bronze.trip_type",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/6_explore_rate_code_json_standard')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "----------------------------------------------------------------------------------------\n--- Reading Data from standard JSON file \n\n---[{\"rate_code_id\":1,\"rate_code\":\"Standard rate\"}\n---,{\"rate_code_id\":2,\"rate_code\":\"JFK\"}\n---,{\"rate_code_id\":3,\"rate_code\":\"Newark\"}\n---,{\"rate_code_id\":4,\"rate_code\":\"Nassau or Westchester\"}\n---,{\"rate_code_id\":5,\"rate_code\":\"Negotiated fare\"}\n---,{\"rate_code_id\":6,\"rate_code\":\"Group ride\"}\n---]\n---------------------------------------------------------------------------------------- \n\nselect *\nFROM\n    OPENROWSET(\n        BULK 'rate_code.json',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR ='0x0b', \n        FIELDQUOTE = '0x0b',\n        ROWTERMINATOR='0x0b'\n    ) \n    with (jsondoc NVARCHAR(MAX)) AS [result] \n    CROSS APPLY OPENJSON(jsondoc)\n    with (rate_code_id TINYINT,rate_code VARCHAR(25) )",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/7_explore_trip_data_green_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery\n\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_csv/year=2020/**',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    AS [result]\n--------------------------------------------------------------------------------------------\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_csv/year=2020/*/*.csv',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    AS [result]\n--------------------------------------------------------------------------------------------\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK ('trip_data_green_csv/year=2020/month=01/*.csv' , 'trip_data_green_csv/year=2020/month=02/*.csv'),\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    AS [result]\n    --------------------------------------------------------------------------------------------\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_csv/year=*/month=*/*.csv' ,\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    AS [result]\n--------------------------------------------------------------------------------------------\nSELECT\n    result.filename() as file_name, result.filepath() as file_path, count(1) as record_count\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_csv/year=*/month=*/*.csv' ,\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    AS [result]\n    group by result.filename(),result.filepath() \n    order by 1 \n    --------------------------------------------------------------------------------------------\nSELECT\n    result.filepath(1) as year,\n    result.filepath(2) as month, \n    count(1) as record_count\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_csv/year=*/month=*/*.csv' ,\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    AS [result]\n    group by result.filepath(1),result.filepath(2)\n    order by 1 \n--------------------------------------------------------------------------------------------\n    SELECT\n    result.filepath(1) as year,\n    result.filepath(2) as month, \n    count(1) as record_count\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_csv/year=*/month=*/*.csv' ,\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW=TRUE,\n        FIELDTERMINATOR=',',\n        ROWTERMINATOR='\\n'\n    ) \n    AS [result]\n    where result.filepath(1)=2020 and result.filepath(2) in ('06','07','08')\n    group by result.filepath(1),result.filepath(2)\n    order by 1 \n\n--------------------------------------------------------------------------------------------\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/8_explore_trip_data_green_parquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery\n\nSELECT\n    result.filepath(1) as year,\n    result.filepath(2) as month, \n    count(1) as record_count\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_parquet/year=*/month=*/*.parquet',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n    where result.filepath(1)=2020\n    and result.filepath(2) in ('01','02','03')\n    group by result.filepath(1),result.filepath(2) \n\n\n    --------------------------------------------------------------------------------------\n\n    SELECT\n    top 100 *\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_parquet/year=*/month=*/*.parquet',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'PARQUET'\n    ) WITH(tip_amount FLOAT,trip_type INT) AS [result]\n    where result.filepath(1)=2020\n    and result.filepath(2) in ('01','02','03')\n    \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/9_explore_trip_data_green_delta')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery\n\nSELECT\n   top 100 *\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_delta/',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'delta'\n    ) AS [result]\n\nSELECT\n   top 100 *\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_delta/',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'delta'\n    ) AS [result]\n    where year='2020' and month='01'    \n\n\nSELECT\n   top 100 *\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_delta/',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'delta'\n    ) \n    with(tip_amount FLOAT,trip_type INT,year varchar(4),month varchar(2))\n    AS [result]    \n\nSELECT\n   count(*)\nFROM\n    OPENROWSET(\n        BULK 'trip_data_green_delta/',\n        DATA_SOURCE='nyc_taxi_data_raw',\n        FORMAT = 'delta'\n    ) AS [result]    \n   ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Query Taxi Zone')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Demo"
				},
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://synapseadlk.dfs.core.windows.net/demo/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}